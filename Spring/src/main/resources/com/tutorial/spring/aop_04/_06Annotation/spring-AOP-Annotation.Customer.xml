<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

<aop:aspectj-autoproxy/>

	<bean id="customerBo"
		class="com.tutorial.spring.aop_04._06Annotation.customer.CustomerImpl"/>
	<bean id="loggingaspect"
		class="com.tutorial.spring.aop_04._06Annotation.aspect.LoggingAspect1"/>
		
		

	<!-- <aop:config>
		<aop:aspect id="aspectLogging" ref="loggingaspect">
		
			<aop:pointcut id="pointCutBefore"
				expression="execution(* com.tutorial.spring.aop_04._06Annotation.customer.Customer.addCustomer(..))" />
			<aop:before method="logBefore" pointcut-ref="pointCutBefore" />

		     <aop:pointcut  id="pointCutAfter"
		    expression="execution(* com.tutorial.spring.aop_04._06Annotation.customer.Customer.addCustomer(..))"/>
		    <aop:after method="logAfter" pointcut-ref="pointCutAfter"/>
		    
		    <aop:pointcut  id="pointCutAfterReturning"
		    expression="execution(* com.tutorial.spring.aop_04._06Annotation.customer.Customer.addCustomerReturnValue(..))"/>
		    <aop:after-returning method="logAfterReturning" pointcut-ref="pointCutAfterReturning"/>
		    
		    <aop:pointcut  id="pointCutAfterThrowing"
		    expression="execution(* com.tutorial.spring.aop_04._06Annotation.customer.Customer.addCustomerThrowException(..))"/>
		    <aop:after-throwing method="logAfterThrowing" pointcut-ref="pointCutAfterThrowing"/>
		    
		    <aop:pointcut id="pointCutAround"
		    expression="execution(* com.tutorial.spring.aop_04._06Annotation.customer.Customer.addCustomerAround(..))" />
		    <aop:around method="logAround" pointcut-ref="pointCutAround"/> 
		</aop:aspect>

	</aop:config> -->
	
</beans>